@page "/teachers/edit/{teacherId:long}"
@using BusinessLogicLayer.TeacherService
@using BusinessLogicLayer.TeacherService.Dtos

@inject ITeacherService TeacherService
@inject NavigationManager UrlNavigationManager

<h3>Редактирование</h3>

<EditForm Model="@_teacher" OnValidSubmit="@UpdateTeacher">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
     <div class="form-group row">
        <label class="control-label col-md-12">Фамилия</label>
        <div class="col-md-4">
            <input class="form-control" @bind="_teacher.LastName" />
        </div>
        <ValidationMessage For="@(() => _teacher.LastName)" />
    </div>
    <div class="form-group row">
        <label class="control-label col-md-12">Имя</label>
        <div class="col-md-4">
            <input class="form-control" @bind="_teacher.FirstName" />
        </div>
        <ValidationMessage For="@(() => _teacher.FirstName)" />
    </div>
    <div class="form-group row">
        <label class="control-label col-md-12">Отчество</label>
        <div class="col-md-4">
            <input class="form-control" @bind="_teacher.MiddleName" />
        </div>
        <ValidationMessage For="@(() => _teacher.MiddleName)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Сохранить</button>
        <button type="button" class="btn btn-light" @onclick="@Cancel">Отмена</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public long? TeacherId { get; set; }

    TeacherDto _teacher = new();

    protected override async Task OnInitializedAsync()
    {
        if (TeacherId != null)
        {
            _teacher = await TeacherService.GetByIdAsync(TeacherId.Value);
        }
        else
        {
            NavigateToList();
        }
    }

    protected void UpdateTeacher()
    {
        TeacherService.Update(_teacher);
        NavigateToList();
    }

    void Cancel()
    {
        NavigateToList();
    }

    void NavigateToList()
    {
        UrlNavigationManager.NavigateTo("teachers");
    }
}