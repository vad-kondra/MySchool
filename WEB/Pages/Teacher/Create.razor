@page "/teachers/create"
@using Data.Models
@inject SchoolHttpClient HttpClient
@inject NavigationManager UrlNavigationManager

<h3>Добавление</h3>

<EditForm Model="@_teacher" OnValidSubmit="CreateTeacher">
    <DataAnnotationsValidator />
     <div class="form-group row">
        <label class="control-label col-md-12">Фамилия</label>
        <div class="col-md-4">
            <input class="form-control" @bind="_teacher.LastName" />
        </div>
        <ValidationMessage For="@(() => _teacher.LastName)" />
    </div>
    <div class="form-group row">
        <label class="control-label col-md-12">Имя</label>
        <div class="col-md-4">
            <input class="form-control" @bind="_teacher.FirstName" />
        </div>
        <ValidationMessage For="@(() => _teacher.FirstName)" />
    </div>
    <div class="form-group row">
        <label class="control-label col-md-12">Отчество</label>
        <div class="col-md-4">
            <input class="form-control" @bind="_teacher.MiddleName" />
        </div>
        <ValidationMessage For="@(() => _teacher.MiddleName)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Сохранить</button>
        <button class="btn btn-light" @onclick="Cancel">Отмена</button>
    </div>
</EditForm>

@code {
    Teacher _teacher = new();

    protected async Task CreateTeacher()
    {
        var addOneUri = new Uri($"{HttpClient.TeachersServiceHost}api/v1/teachers");
        await HttpClient.PostAsJsonAsync( addOneUri, _teacher);
        UrlNavigationManager.NavigateTo("/teachers");
    }

    void Cancel()
    {
        UrlNavigationManager.NavigateTo("/teachers");
    }
}